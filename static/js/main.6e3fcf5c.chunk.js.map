{"version":3,"sources":["view/components/AlertMes.jsx","view/components/Loading.jsx","assets/javascript/AESTool.js","view/HomePage.jsx","view/Signature.jsx","view/ReviewGoldenForm.jsx","view/components/SignaturePad.jsx","assets/document/人身.pdf","view/Test.jsx","view/PdfJs.jsx","router/AppRoute.jsx","reportWebVitals.js","index.js"],"names":["AlertMes","props","Alert","show","variant","color","className","style","top","left","transform","padding","zIndex","mes","Loading","isLoading","circleHide","role","children","Encrypt","data","key","iv","CryptoJS","enc","Utf8","parse","encrypted","AES","encrypt","mode","CBC","pad","Pkcs7","Base64","stringify","ciphertext","Decrypt","base64","base64Str","decrypt","toString","Page","history","useHistory","useState","alertMes","setAlertMes","setIsLoading","phoneNum","setPhoneNum","identityType","setIdentityType","inputDis","setInputDis","modalShow","setModalShow","setData","Chk1","Chk2","responseMesData","inputMesChk2","setInputMesChk2","id","URL","window","location","href","searchParams","get","code","useEffect","undefined","process","substring","handleAPI","getFormData","postData","user_code","API","reqEncData","JSON","comp_no","postParams","URLSearchParams","append","axios","post","headers","then","res","resEncData","catch","err","console","log","sendOTPAPI","e","REACT_APP_API","OTPVerify","fileType","preventDefault","item27","setTimeout","push","pathname","state","initialData","type","formData","handleEvent","closeModal","minHeight","value","disabled","onChange","target","selected","defaultValue","placeholder","onClick","Modal","size","onHide","centered","Header","closeButton","Title","Body","Footer","Sign","useLocation","buttonDis","setButtonDis","oldPdfData","setOldPdfData","propsData","setPropsData","getFormPDFAPI","getOldFormData","fSerial","makeNewPDF","typeCode","signImage","document","getElementById","toDataURL","getType","pdfdata","reload","Signatorys","Type","PicSign","FileType","SignFile","reviewData","resetSignData","canvas","ctx","getContext","width","height","getMousePos","evt","rect","getBoundingClientRect","x","clientX","y","clientY","mouseMove","mousePos","lineCap","lineWidth","lineJoin","shadowBlur","shadowColor","lineTo","stroke","getTouchPos","touches","touchMove","touchPos","devicePixelRatio","scale","addEventListener","beginPath","moveTo","removeEventListener","clearRect","GoldenForm","reviewFile","setReviewFile","resetSign","checkUpload","shoe","src","SignaturePad","image","htmlImg","innerHTML","hide","title","_","HomePage","signTypeTitle","setSignTypeTitle","signModalShow","setSignModalShow","showSignaturePad","dataset","nodeName","closeShowSignaturePad","PDF","position","PDFjs","file","AppRoute","exact","path","Test","Signature","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6e3fcf5c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Alert } from 'react-bootstrap'\r\nconst AlertMes = (props) => {\r\n    let style = {\r\n        top: '15px',\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        padding: '15px',\r\n        zIndex: '10000'\r\n    }\r\n    return (\r\n        <>\r\n            <Alert show={props.show} variant={props.color}\r\n                className='mx-auto text-center position-fixed fw-bolder col-8 col-md-6 col-lg-4' style={style}>\r\n                {props.mes}\r\n            </Alert>\r\n        </>\r\n    )\r\n}\r\nexport default AlertMes","const Loading = (props) => {\r\n    return (\r\n        <>\r\n            <div className={`loading-wrapper position-fixed ${props.isLoading === true ? 'd-block' : 'd-none'}`} style={{ zIndex: '2000', top: '0' }}>\r\n                <div className=\"loading d-flex flex-column align-items-center\">\r\n                    <div className={`spinner-border text-golden-brown spinner-border--width ${props.circleHide ? 'visually-hidden' : ''}`} role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                    </div>\r\n                    {props.children}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Loading;","import CryptoJS from \"crypto-js\";\r\n\r\n//加密\r\nexport function Encrypt(data, key, iv) {\r\n    //編碼 KEY\r\n    key = CryptoJS.enc.Utf8.parse(key);\r\n    //編碼 IV\r\n    iv = CryptoJS.enc.Utf8.parse(iv);\r\n    //編碼 DATA\r\n    data = CryptoJS.enc.Utf8.parse(data);\r\n    // 加密模式為 CBC 編碼方式為 Pkcs7\r\n    let encrypted = CryptoJS.AES.encrypt(data, key, {\r\n        iv: iv,\r\n        mode: CryptoJS.mode.CBC,\r\n        padding: CryptoJS.pad.Pkcs7\r\n    });\r\n    // console.log(CryptoJS.enc.Base64.stringify(encrypted.ciphertext))\r\n    return CryptoJS.enc.Base64.stringify(encrypted.ciphertext);\r\n}\r\n//解密\r\nexport function Decrypt(data, key, iv) {\r\n\r\n    key = CryptoJS.enc.Utf8.parse(key);\r\n    iv = CryptoJS.enc.Utf8.parse(iv);\r\n    \r\n    const base64 = CryptoJS.enc.Base64.parse(data);\r\n    const base64Str = CryptoJS.enc.Base64.stringify(base64);\r\n    const decrypt = CryptoJS.AES.decrypt(base64Str, key, {\r\n        iv: iv,\r\n        mode: CryptoJS.mode.CBC,\r\n        padding: CryptoJS.pad.Pkcs7\r\n    });\r\n    let decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\r\n    return decryptedStr.toString();\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Modal } from 'react-bootstrap'\r\nimport AlertMes from './components/AlertMes'\r\nimport Loading from './components/Loading';\r\n\r\nimport { Encrypt, Decrypt } from '../assets/javascript/AESTool'\r\nimport axios from 'axios'\r\nconst Page = () => {\r\n    let history = useHistory();\r\n\r\n    let [alertMes, setAlertMes] = useState({ mes: '', show: false, color: 'transparent' })\r\n    let [isLoading, setIsLoading] = useState(false)\r\n    let [phoneNum, setPhoneNum] = useState('') //手機號碼\r\n    let [identityType, setIdentityType] = useState('要保人') //身份\r\n    let [inputDis, setInputDis] = useState(false) //表單鎖住：true 開鎖;false 關鎖\r\n    let [modalShow, setModalShow] = useState(false) //MODAL：true:開;false:關\r\n    let [data, setData] = useState([])\r\n    /*--------簡訊驗證---------*/\r\n    let [responseMesData, setResponseMesData] = useState({ Chk1: '123', Chk2: '456' })//接收 response 簡訊確認驗證碼\r\n    let [inputMesChk2, setInputMesChk2] = useState('') //使用者輸入簡訊驗證碼 Chk2\r\n\r\n    //抓取網址參數 id\r\n    let id = new URL(window.location.href).searchParams.get('id'); //業務員編號\r\n    let code = new URL(window.location.href).searchParams.get('code'); //公勝表單編號\r\n    useEffect(() => {\r\n        if (code == null || code == undefined || code == '') {\r\n            setAlertMes({ mes: '抓取表單編號錯誤!!請重新連結', show: true, color: 'danger' })\r\n            setInputDis(true)\r\n            setIsLoading(true)\r\n        }\r\n    }, [])\r\n\r\n    let key = process.env.REACT_APP_GOLDEN_UAT_Data.substring(0, 32)\r\n    let iv = process.env.REACT_APP_GOLDEN_IV\r\n    const handleAPI = {\r\n        getFormData: function () {\r\n            let postData = {\r\n                user_code: id,\r\n                code: code\r\n            }\r\n            let API = `${process.env.REACT_APP_GOLDEN_MAGENT_API}magent/getLifeForm`\r\n            let data = {\r\n                reqEncData: Encrypt(JSON.stringify(postData), key, iv),\r\n                comp_no: \"84200994\"\r\n            }\r\n            let postParams = new URLSearchParams();\r\n            postParams.append('reqEncData', data.reqEncData);\r\n            postParams.append('comp_no', data.comp_no);\r\n            axios.post(API, postParams, {\r\n                headers: {\r\n                    \"content-type\": \"application/x-www-form-urlencoded\"\r\n                }\r\n            })\r\n                .then((res) => {\r\n                    setData(JSON.parse(Decrypt(res.data.resEncData, key, iv)))\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n        },\r\n        // ----- OTP ----- //\r\n        sendOTPAPI: function (e) { //發送簡訊 API /SMSEmail\r\n            if (phoneNum == '') {\r\n                setAlertMes({ mes: `尚未正確填寫【${identityType}】手機號碼`, show: true, color: 'danger' })\r\n                setIsLoading(false)\r\n                return\r\n            }\r\n            let API = `${process.env.REACT_APP_API}/SMSEmail`\r\n            let data = {\r\n                Mobile: phoneNum,\r\n                Email: null\r\n            }\r\n            setModalShow(true) //!測試用，需刪除\r\n            // setIsLoading(true)\r\n            // axios.post(API, data)\r\n            //     .then((res) => {\r\n            //         let { ResponseCode } = res.data\r\n            //         if (ResponseCode === '0') {\r\n            //             setIsLoading(false)\r\n            //             setAlertMes({ mes: '驗證碼已發送至您的手機簡訊及Email，請詳加留意', show: true, color: 'secondary' })\r\n            //             setModalShow(true) //打開簡訊 Modal\r\n            //             setResponseMesData({\r\n            //                 Chk1: res.data.Chk1,\r\n            //                 Chk2: res.data.Chk2\r\n            //             })\r\n            //         } else {\r\n            //             /*\r\n            //             -33\t發送簡訊dll錯誤,\r\n            //             -34\t發送簡訊失敗,\r\n            //             -58\t傳入數值不能為空值(簡訊)\r\n            //             */\r\n            //             setAlertMes({ mes: '發送簡訊失敗', show: true, color: 'danger' })\r\n            //             setTimeout(() => {\r\n            //                 setAlertMes({ mes: '已自動幫您重新發送簡訊!!請留意', show: true, color: 'primary' })\r\n            //                 handleEvent.sendMesAPI()\r\n            //             }, 3000)\r\n            //         }\r\n            //     })\r\n            //     .catch((err) => {\r\n            //         setIsLoading(false)\r\n            //         setAlertMes({ mes: '發送簡訊資料失敗!! 請聯繫客服人員', show: true, color: 'danger' })\r\n            //         console.log(err)\r\n            //     })\r\n        },\r\n        OTPVerify: function (e) { //簡訊驗證通過後，直接 POST 註冊 API\r\n            e.preventDefault();\r\n            //空值判斷\r\n            if (inputMesChk2 === '') {\r\n                setAlertMes({ mes: `尚未正確填入驗證碼!!請查看【${identityType}】簡訊`, show: true, color: 'danger' })\r\n                return\r\n            } else if (inputMesChk2 === responseMesData.Chk2) {\r\n                setAlertMes({ mes: '簡訊驗證成功~~ 前往簽名...', show: true, color: 'secondary' })\r\n                setModalShow(false)\r\n                setIsLoading(true)\r\n                // ----- 驗證成功後立即下一步(簽名)  ----- //\r\n                let fileType;\r\n                if (data[0].item27 == '0') { //如果 data item27 等於 0 ，PDF類型為「人身」\r\n                    fileType = '1' //人身\r\n                } else {\r\n                    fileType = '2' //人身+高保費\r\n                }\r\n                setTimeout(() => {\r\n                    history.push({\r\n                        pathname: '/signature',\r\n                        state: { initialData: { type: identityType, fileType: fileType, formData: { user_code: id, code: code } } }\r\n                    })\r\n                }, 3000)\r\n            } else if (inputMesChk2 !== responseMesData.Chk2) {\r\n                setAlertMes({ mes: '簡訊驗證失敗!!請重新確認驗證碼', show: true, color: 'danger' })\r\n                return\r\n            }\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        handleAPI.getFormData()\r\n    }, [])\r\n    useEffect(() => { }, [data])\r\n\r\n    const handleEvent = {\r\n        closeModal: function () { //關閉 modal\r\n            setModalShow(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (alertMes.mes) {\r\n            setTimeout(() => {\r\n                setAlertMes({ mes: '', show: false, color: 'transparent' })\r\n            }, 4000)\r\n        }\r\n    }, [alertMes]);\r\n\r\n    return (\r\n        <>\r\n            <Loading isLoading={isLoading} />\r\n            <AlertMes mes={alertMes.mes} show={alertMes.show} color={alertMes.color} />\r\n            <div className='bg-primary' style={{ minHeight: '100vh' }}>\r\n                <div className='container py-5'>\r\n                    <div className='bg-light py-4 rounded'>\r\n                        <h5 className='fw-bolder text-center mb-3'>mAgent+ 公勝表單 <p className='mt-2'>遠距簽名</p></h5>\r\n                        <div className='col-10 col-md-8 col-lg-6 mx-auto'>\r\n                            {/* 公勝表單 ID */}\r\n                            <div className='form-group'>\r\n                                <input className='form-control' value={`公勝表單編號：${code}`} disabled />\r\n                            </div>\r\n                            {/* 下拉選單 */}\r\n                            <div className='form-group my-4'>\r\n                                <select className='form-select' disabled={inputDis && 'disabled'} onChange={e => setIdentityType(e.target.value)}>\r\n                                    <option value='要保人' selected={identityType == '要保人' && 'selected'}>要保人</option>\r\n                                    <option value='被保人' selected={identityType == '被保人' && 'selected'}>被保人</option>\r\n                                    <option value='法定代理人' selected={identityType == '法定代理人' && 'selected'}>法定代理人</option>\r\n                                    <option value='保險費付款授權人' selected={identityType == '保險費付款授權人' && 'selected'}>保險費付款授權人</option>\r\n                                </select>\r\n                            </div>\r\n                            {/* 手機號碼 */}\r\n                            <div className='form-group'>\r\n                                <input className='form-control' defaultValue='' placeholder='手機號碼'\r\n                                    onChange={e => setPhoneNum(e.target.value)} disabled={inputDis && 'disabled'} />\r\n                            </div>\r\n                            <div className='text-center mt-4'>\r\n                                <button className='btn btn-secondary fw-bolder text-light' onClick={handleAPI.sendOTPAPI} disabled={inputDis && 'disabled'}>簡訊驗證</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal show={modalShow} size='md' onHide={handleEvent.closeModal} centered>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title><span className='fw-bolder'>{identityType}</span>簡訊驗證</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className='form-group'>\r\n                            <label>驗證碼</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <p className='mb-0 me-2 fw-bolder'>{responseMesData.Chk1} -</p>\r\n                                <div>\r\n                                    <input type='tel' id='code' className={`form-control w-100`}\r\n                                        value={inputMesChk2}\r\n                                        onChange={e => setInputMesChk2(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <button className='btn btn-secondary text-light fw-bolder' onClick={handleAPI.OTPVerify}>送出</button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Page;","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { sampleBase64pdf } from '../sampleBase64pdf'\r\nimport { Encrypt, Decrypt } from '../assets/javascript/AESTool'\r\nimport axios from 'axios'\r\nimport AlertMes from './components/AlertMes';\r\nimport Loading from './components/Loading';\r\nconst Sign = () => {\r\n    //*: 1.取得\"舊\"表單PDF \r\n    //*: 2.將\"舊\"PDF 及簽名圖檔轉 base64 傳回後端 \r\n    //*: 3.取得 \"新\" PDF 渲染至畫面\r\n\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    console.log(location)\r\n    let [buttonDis, setButtonDis] = useState(true) //按鈕disabled - true:鎖住 false:解鎖\r\n    let [alertMes, setAlertMes] = useState({ mes: '', show: false, color: '' })\r\n    let [isLoading, setIsLoading] = useState(false) // true:開啟 false:關閉\r\n    let [saveImg, setSaveImg] = useState('') // 儲存簽名圖檔\r\n    let [oldPdfData, setOldPdfData] = useState('') // \"舊\" PDF\r\n    let [newPdfData, setNewPdfData] = useState('') // \"新\" PDF 傳送至第三步驟進行預覽\r\n    let [propsData, setPropsData] = useState({\r\n        type: '',\r\n        fileType: '',\r\n        formData: { user_code: '', code: '' }\r\n    })\r\n\r\n    //AES password\r\n    let key = process.env.REACT_APP_GOLDEN_UAT_Data.substring(0, 32)\r\n    let iv = process.env.REACT_APP_GOLDEN_IV\r\n\r\n    const handleAPI = {\r\n        getFormPDFAPI: function () { //取得\"舊\" PDF\r\n            setIsLoading(true)\r\n            let getOldFormData = {\r\n                user_code: location.state.initialData.formData.user_code,\r\n                fSerial: location.state.initialData.formData.code\r\n            }\r\n            let API = `${process.env.REACT_APP_GOLDEN_MAGENT_API}magent/downloadGoldenForm`\r\n            let data = { // 加密 data\r\n                reqEncData: Encrypt(JSON.stringify(getOldFormData), key, iv),\r\n                comp_no: \"84200994\"\r\n            }\r\n            let postParams = new URLSearchParams();\r\n            postParams.append('reqEncData', data.reqEncData);\r\n            postParams.append('comp_no', data.comp_no);\r\n            axios.post(API, postParams, {\r\n                headers: {\r\n                    \"content-type\": \"application/x-www-form-urlencoded\"\r\n                }\r\n            })\r\n                .then((res) => {\r\n                    setIsLoading(false)\r\n                    setOldPdfData(JSON.parse(Decrypt(res.data.resEncData, key, iv))) //儲存舊 PDF\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n        },\r\n        makeNewPDF: function () { //簽名圖檔+\"舊\" PDF 合檔\r\n            //*取得簽名 dom 元素，並轉換成 base64\r\n            let singElement = document.getElementById('mycanvas')\r\n            let signImage = singElement.toDataURL('image/png');\r\n\r\n            //* 判斷身分別\r\n            let getType = location.state.initialData.type //取得由首頁傳送過來的身分別\r\n            let typeCode; //身分別編號\r\n            if (getType == '要保人') {\r\n                typeCode = '1'\r\n            } else if (getType == '被保人') {\r\n                typeCode = '2'\r\n            } else if (getType == '法定代理人') {\r\n                typeCode = '3'\r\n            } else if (getType == '保險費付款授權人') {\r\n                typeCode = '4'\r\n            }\r\n\r\n            //! 判斷如果取得 PDF檔 錯誤\r\n            if (oldPdfData.pdfdata == undefined) {\r\n                alertMes({ mes: '取得公勝表單錯誤，請重新操作', show: true, color: 'danger' })\r\n                window.location.reload(); //網頁重整\r\n            }\r\n\r\n            //* 傳送過去的 DATA\r\n            let postData = {\r\n                Signatorys: [\r\n                    {\r\n                        Type: typeCode, //身份別\r\n                        PicSign: signImage //簽名檔 base64\r\n                    }\r\n                ],\r\n                FileType: location.state.initialData.fileType, //PDF 檔案別(人身、人身+高保費)\r\n                SignFile: `data:application/pdf;base64,${oldPdfData.pdfdata}` //PDF檔 base64\r\n            }\r\n            console.log(postData)\r\n            let API = `api/signpdf`\r\n            history.push({\r\n                pathname: '/review',\r\n                state: { initialData: location.state.initialData, reviewData: postData, resetSignData: location.state }\r\n            })\r\n            // axios.post(API, postData)\r\n            //     .then((res) => {\r\n            //         let { ResponseCode } = res.data\r\n            //         if (ResponseCode == '0') { //成功\r\n\r\n            //         } else if (ResponseCode == '-1') { //系統內部錯誤\r\n\r\n            //         } else if (ResponseCode == '-97') { //傳入PDF異常\r\n\r\n            //         } else if (ResponseCode == '-98') { //傳入簽名檔異常\r\n\r\n            //         } else if (ResponseCode == '-99') { //傳入資料格式錯誤\r\n\r\n            //         } else { //其他\r\n\r\n            //         }\r\n            //     })\r\n            //     .catch((err) => {\r\n            //         console.log(err)\r\n            //     })\r\n        }\r\n    }\r\n    const handleEvent = {\r\n        signaturePad: function () { //簽名板\r\n            // init canvas element\r\n            let canvas = document.getElementById('mycanvas')\r\n            let ctx = canvas.getContext('2d')\r\n\r\n            // 抗鋸齒\r\n            let width = canvas.width,\r\n                height = canvas.height;\r\n            if (window.devicePixelRatio) {\r\n                canvas.style.width = width + 'px';\r\n                canvas.style.height = height + 'px';\r\n                canvas.height = height * window.devicePixelRatio;\r\n                canvas.width = width * window.devicePixelRatio;\r\n                ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\r\n            }\r\n\r\n            // 取得滑鼠標位置\r\n            function getMousePos(canvas, evt) {\r\n                let rect = canvas.getBoundingClientRect();\r\n                return {\r\n                    x: evt.clientX - rect.left,\r\n                    y: evt.clientY - rect.top\r\n                };\r\n            }\r\n\r\n            //滑鼠移動\r\n            function mouseMove(evt) {\r\n                let mousePos = getMousePos(canvas, evt);\r\n                ctx.lineCap = 'round';\r\n                ctx.lineWidth = 4;\r\n                ctx.lineJoin = 'round';\r\n                ctx.shadowBlur = 1; // 邊緣模糊，防止直線邊緣出現鋸齒 \r\n                ctx.shadowColor = 'block';// 邊緣顏色\r\n                ctx.lineTo(mousePos.x, mousePos.y);\r\n                ctx.stroke();\r\n            }\r\n\r\n            //滑鼠按下\r\n            canvas.addEventListener('mousedown', function (evt) {\r\n                let mousePos = getMousePos(canvas, evt);\r\n                ctx.beginPath();\r\n                ctx.moveTo(mousePos.x, mousePos.y);\r\n                evt.preventDefault();\r\n                canvas.addEventListener('mousemove', mouseMove, false);\r\n                setButtonDis(false) //確認已經有點下簽名動作，將 button disabled 改為 false\r\n            });\r\n\r\n            //滑鼠移開\r\n            canvas.addEventListener('mouseup', function () {\r\n                canvas.removeEventListener('mousemove', mouseMove, false);\r\n            }, false);\r\n\r\n            // touch\r\n            function getTouchPos(canvas, evt) {\r\n                let rect = canvas.getBoundingClientRect();\r\n                return {\r\n                    x: evt.touches[0].clientX - rect.left,\r\n                    y: evt.touches[0].clientY - rect.top\r\n                };\r\n            }\r\n\r\n            function touchMove(evt) {\r\n                let touchPos = getTouchPos(canvas, evt);\r\n                ctx.lineWidth = 5;\r\n                ctx.lineCap = 'round'; // 繪制圓形的結束線帽\r\n                ctx.lineJoin = 'round'; // 兩條線條交匯時，建立圓形邊角\r\n                ctx.shadowBlur = 1; // 邊緣模糊，防止直線邊緣出現鋸齒 \r\n                ctx.shadowColor = 'black'; // 邊緣顏色\r\n                ctx.lineTo(touchPos.x, touchPos.y);\r\n                ctx.stroke();\r\n            }\r\n\r\n            //觸控開始\r\n            canvas.addEventListener('touchstart', function (e) {\r\n                var touchPos = getTouchPos(canvas, e);\r\n                ctx.beginPath(touchPos.x, touchPos.y);\r\n                ctx.moveTo(touchPos.x, touchPos.y);\r\n                e.preventDefault();\r\n                canvas.addEventListener('touchmove', touchMove, false);\r\n                setButtonDis(false) //確認已經有點下簽名動作，將 button disabled 改為 false\r\n            });\r\n\r\n            //觸控結束\r\n            canvas.addEventListener('touchend', function () {\r\n                canvas.removeEventListener('touchmove', touchMove, false);\r\n            }, false);\r\n\r\n            // clear 清空\r\n            document.getElementById('clear').addEventListener('click', function () {\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n                setButtonDis(true) //如按下清空按鈕，確認按鈕 disabled\r\n            }, false);\r\n\r\n            // convertToImage 轉換成圖片\r\n            // document.getElementById('convertToImage').addEventListener('click', function () {\r\n            // ctx.clearRect(0, 0, canvas.width, canvas.height); //確認後清空\r\n            // }, false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => { // 判斷是否有依照正確流程走\r\n        if (location.state == undefined) {\r\n            console.log(location)\r\n            setAlertMes({ mes: '取得表單編號錯誤!!', show: true, color: 'danger' })\r\n            setIsLoading(true)\r\n            setTimeout(() => {\r\n                history.push({ pathname: '/' })\r\n            }, 2000)\r\n            return\r\n        } else {\r\n            setPropsData(location.state.initialData)\r\n            handleAPI.getFormPDFAPI();\r\n        }\r\n    }, [])\r\n    useEffect(() => { }, [propsData])\r\n\r\n    useEffect(() => {\r\n        handleEvent.signaturePad();\r\n    }, [])\r\n\r\n    useEffect(() => { // alert 打開後再 4.5 秒關閉\r\n        if (alertMes.show) {\r\n            setTimeout(() => {\r\n                setAlertMes({ mes: '', show: false, color: 'transparent' })\r\n            }, 4500)\r\n        }\r\n    }, [alertMes])\r\n\r\n    // 儲存成功後，簽名合檔返回成功，即轉頁至預覽\r\n    return (\r\n        <>\r\n            <Loading isLoading={isLoading} />\r\n            <AlertMes mes={alertMes.mes} show={alertMes.show} color={alertMes.color} />\r\n            <div className='container'>\r\n                <div className='d-flex flex-column justify-content-center align-items-center py-4'>\r\n                    <h4 className='text-center fw-bolder'>【{propsData.type}】簽名</h4>\r\n                    <div className='text-end my-3'>\r\n                        <button className='btn btn-outline-primary fw-bolder mx-2' id='clear'>清除並重簽</button>\r\n                        <button className='btn btn-primary fw-bolder text-light' id='convertToImage' disabled={buttonDis && 'disabled'} onClick={handleAPI.makeNewPDF}>儲存簽名</button>\r\n                    </div>\r\n                    <canvas id='mycanvas' width='800' height='350' className='signature'></canvas>\r\n                </div>\r\n                <div id='sign-image' className='d-none'></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Sign","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { Document, Page } from 'react-pdf/dist/esm/entry.webpack';\r\nimport AlertMes from './components/AlertMes';\r\nimport Loading from './components/Loading';\r\n\r\nconst GoldenForm = () => {\r\n    let history = useHistory();\r\n    let location = useLocation();\r\n    let [numPages, setNumPages] = useState(null);\r\n    let [pageNumber, setPageNumber] = useState(1);\r\n    let [isLoading, setIsLoading] = useState(false)\r\n    let [alertMes, setAlertMes] = useState({ mes: '', show: false, color: 'transparent' })\r\n    let [reviewFile, setReviewFile] = useState({ SignFile: '' }) //取得 PDF 文件\r\n    console.log(location)\r\n    useEffect(() => {\r\n        if (location.state == undefined || location.state == null || location.state == '') {\r\n            setIsLoading(true)\r\n            setAlertMes({ mes: '取得檢視 PDF 檔錯誤!!', show: true, color: 'danger' })\r\n            setTimeout(() => {\r\n                history.push({\r\n                    pathname: '/signature',\r\n                    state: location.state\r\n                })\r\n            }, 2000)\r\n            return\r\n        } else {\r\n            setReviewFile(location.state.reviewData)\r\n        }\r\n    }, [location]);\r\n\r\n    const handleEvent = {\r\n        resetSign: function () { //返回重簽\r\n            history.push({\r\n                pathname: '/signature',\r\n                state: location.state\r\n            })\r\n        },\r\n        checkUpload: function () {\r\n            console.log('確認上傳')\r\n        }\r\n    }\r\n\r\n    function onDocumentLoadSuccess({ numPages }) {\r\n        setNumPages(numPages);\r\n        setPageNumber(1);\r\n    }\r\n    function changePage(offSet) { setPageNumber(prevPageNumber => prevPageNumber + offSet); }\r\n    function changePageBack() { changePage(-1) }\r\n    function changePageNext() { changePage(+1) }\r\n\r\n    //base64 轉 file\r\n    function dataURLtoFile(dataUrl, filename) {\r\n        let arr = dataUrl.split(','),\r\n            mime = arr[0].match(/:(.*?);/)[1],\r\n            bstr = atob(arr),\r\n            n = bstr.length,\r\n            u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n            u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return new File([u8arr], filename, { type: mime });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (alertMes.show) {\r\n            setTimeout(() => {\r\n                setAlertMes({ mes: '', show: false, color: 'transparent' })\r\n            }, 4500)\r\n        }\r\n    }, [alertMes])\r\n\r\n    return (\r\n        <>\r\n            <Loading isLoading={isLoading} />\r\n            <AlertMes mes={alertMes.mes} show={alertMes.shoe} color={alertMes.color} />\r\n            <div className='container'>\r\n                <h4 className='text-center fw-bolder mt-4'>檢視(簽名)</h4>\r\n                <div className='text-center py-3'>\r\n                    <button className='btn btn-third fw-bolder me-3' onClick={handleEvent.resetSign}>取消，重簽</button>\r\n                    <button className='btn btn-secondary fw-bolder text-light' onClick={handleEvent.checkUpload}>確認，上傳</button>\r\n                </div>\r\n                <div className='iframe-container mb-3'>\r\n                    <iframe src={reviewFile.SignFile} className='iframe-responsive'></iframe>\r\n                </div>\r\n                <img src={location.state.reviewData.Signatorys[0].PicSign} className='img-fluid'/>\r\n            </div>\r\n            {/* <center>\r\n                <div className='bg-third' style={{ overflowY: 'scroll', height: '450px' }}>\r\n                    <Document file={location.state.SignFile} onLoadSuccess={onDocumentLoadSuccess}>\r\n                        {Array.from(\r\n                            new Array(numPages),\r\n                            (el, index) => (\r\n                                <Page\r\n                                    key={`page_${index + 1}`}\r\n                                    height='1100'\r\n                                    pageNumber={index + 1}\r\n                                    className='pt-3'\r\n                                >\r\n                                </Page>\r\n                            )\r\n                        )}\r\n                    </Document>\r\n                </div>\r\n                <div className='text-center py-3'>\r\n                    <button className='btn btn-third fw-bolder me-3'>取消，重簽</button>\r\n                    <button className='btn btn-secondary fw-bolder text-light'>確認，上傳</button>\r\n                </div>\r\n            </center> */}\r\n        </>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default GoldenForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nconst SignaturePad = (props) => {\r\n    let [saveImg, setSaveImg] = useState(null)\r\n    const handleEvent = {\r\n        signaturePad: function () { //簽名板\r\n            // init canvas element\r\n            let canvas = document.getElementById('mycanvas')\r\n            let ctx = canvas.getContext('2d')\r\n\r\n            // 解決鋸齒狀問題\r\n            let width = canvas.width, \r\n                height = canvas.height;\r\n            if (window.devicePixelRatio) {\r\n                canvas.style.width = width + 'px';\r\n                canvas.style.height = height + 'px';\r\n                canvas.height = height * window.devicePixelRatio;\r\n                canvas.width = width * window.devicePixelRatio;\r\n                ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\r\n            }\r\n\r\n            // 取得滑鼠位置\r\n            function getMousePos(canvas, evt) {\r\n                console.log(evt)\r\n                let rect = canvas.getBoundingClientRect();\r\n                return {\r\n                    x: evt.clientX - rect.left,\r\n                    y: evt.clientY - rect.top\r\n                };\r\n            }\r\n\r\n            //滑鼠移動\r\n            function mouseMove(evt) {\r\n                let mousePos = getMousePos(canvas, evt);\r\n                ctx.lineCap = 'round';\r\n                ctx.lineWidth = 4;\r\n                ctx.lineJoin = 'round';\r\n                ctx.shadowBlur = 1; // 邊緣模糊，防止直線邊緣出現鋸齒 \r\n                ctx.shadowColor = 'block';// 邊緣顏色\r\n                ctx.lineTo(mousePos.x, mousePos.y);\r\n                ctx.stroke();\r\n            }\r\n\r\n            //滑鼠按下\r\n            canvas.addEventListener('mousedown', function (evt) {\r\n                let mousePos = getMousePos(canvas, evt);\r\n                ctx.beginPath();\r\n                ctx.moveTo(mousePos.x, mousePos.y);\r\n                evt.preventDefault();\r\n                canvas.addEventListener('mousemove', mouseMove, false);\r\n            });\r\n\r\n            //滑鼠移開\r\n            canvas.addEventListener('mouseup', function () {\r\n                canvas.removeEventListener('mousemove', mouseMove, false);\r\n            }, false);\r\n\r\n            // touch\r\n            function getTouchPos(canvas, evt) {\r\n                let rect = canvas.getBoundingClientRect();\r\n                return {\r\n                    x: evt.touches[0].clientX - rect.left,\r\n                    y: evt.touches[0].clientY - rect.top\r\n                };\r\n            }\r\n\r\n            function touchMove(e) {\r\n                let touchPos = getTouchPos(canvas, e);\r\n                console.log(touchPos.x, touchPos.y)\r\n                ctx.lineWidth = 5;\r\n                ctx.lineCap = 'round'; // 繪制圓形的結束線帽\r\n                ctx.lineJoin = 'round'; // 兩條線條交匯時，建立圓形邊角\r\n                ctx.shadowBlur = 1; // 邊緣模糊，防止直線邊緣出現鋸齒 \r\n                ctx.shadowColor = 'black'; // 邊緣顏色\r\n                ctx.lineTo(touchPos.x, touchPos.y);\r\n                ctx.stroke();\r\n            }\r\n\r\n            //觸控開始\r\n            canvas.addEventListener('touchstart', function (e) {\r\n                var touchPos = getTouchPos(canvas, e);\r\n                ctx.beginPath(touchPos.x, touchPos.y);\r\n                ctx.moveTo(touchPos.x, touchPos.y);\r\n                e.preventDefault();\r\n                canvas.addEventListener('touchmove', touchMove, false);\r\n            });\r\n\r\n            //觸控結束\r\n            canvas.addEventListener('touchend', function () {\r\n                canvas.removeEventListener('touchmove', touchMove, false);\r\n            }, false);\r\n\r\n            // clear 清空\r\n            document.getElementById('clear').addEventListener('click', function () {\r\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            }, false);\r\n\r\n            // convertToImage 轉換成圖片\r\n            document.getElementById('convertToImage').addEventListener('click', function () {\r\n                let image = canvas.toDataURL('image/png');\r\n                let htmlImg = `<img src=${image} alt='from canvas' width='60px' height='35px'/>`\r\n                document.getElementById('sign-image').innerHTML = htmlImg\r\n            }, false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (props.show) {\r\n            handleEvent.signaturePad()\r\n        }\r\n    }, [props]);\r\n    \r\n    return (\r\n        <>\r\n            <Modal show={props.show} size='lg' onHide={props.hide}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{props.title} 簽名</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <canvas id='mycanvas' width='600' height='250' className='signature'></canvas>\r\n                    <div className='text-end'>\r\n                        <button className='btn btn-secondary' id='convertToImage' onClick={props.hide}>確認</button>\r\n                        <button className='btn btn-secondary mx-2' id='clear'>清除</button>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\nexport default SignaturePad","export default __webpack_public_path__ + \"static/media/人身.a1fdc92d.pdf\";","import React, { useState } from 'react';\r\n//component\r\nimport SignaturePad from './components/SignaturePad';\r\n\r\nimport PDF from '../assets/document/人身.pdf'\r\nconst HomePage = () => {\r\n    //簽名區 value\r\n    let [signTypeTitle, setSignTypeTitle] = useState('') //簽名板 title\r\n    let [signModalShow, setSignModalShow] = useState(false) //簽名板 modal 顯示。true:開啟,false:關閉\r\n\r\n    const handleEvent = {\r\n        //簽名板\r\n        showSignaturePad: function (e) {\r\n            e.preventDefault();\r\n            let { dataset, nodeName } = e.target\r\n            if (nodeName !== 'BUTTON') {\r\n                return\r\n            }\r\n            if (!signModalShow) {\r\n                setSignModalShow(!signModalShow)\r\n            }\r\n            setSignTypeTitle(dataset.title)\r\n        },\r\n        closeShowSignaturePad: function () {\r\n            setSignModalShow(false)\r\n        } \r\n    }\r\n\r\n    let signPos = {\r\n        position: 'absolute',\r\n        top: '230px',\r\n        left: '522px'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='container'>\r\n                <button className='btn btn-third fw-bolder mt-3' onClick={handleEvent.showSignaturePad} data-title=''>簽名</button>\r\n                <SignaturePad show={signModalShow} title={signTypeTitle} hide={handleEvent.closeShowSignaturePad} />\r\n                {/* 方法一：\r\n                    1. 將 pdf 轉為 image (遠距公勝表單一份都為 2~3 頁，轉換時間應該不長)\r\n                        ※圖片畫質問題(dpi: 144)\r\n                    2. 將簽名圖嵌入此 image 各固定位置\r\n                    3. 將嵌入完成的簽名圖片，再轉回 PDF\r\n                    4. 回傳【新PDF】至後端\r\n                */}\r\n                {/* 方法二：\r\n                    1. 尋找第三方 plugin 支援\r\n                        - 直接提供 pdf 在線簽名\r\n                        - pdf 轉 canvas 嵌入電子簽名後再轉回 pdf\r\n                */}\r\n                <div className='scroll-container bg-third p-3'>\r\n                    <iframe src={PDF} width='100%' height='768px' className='demo' id='myPdf'></iframe>\r\n                    <div id='sign-image' className='signature-image' style={signPos}></div>\r\n                    <div id='sign-image2' className='signature-image'></div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default HomePage","import React, { useState } from 'react';\r\nimport PDFJS from 'pdfjs'\r\nimport file from '../assets/document/人身.pdf'\r\nconst PDFjs = () => {\r\n    return (\r\n        <>\r\n            <iframe src={file}></iframe>\r\n        </>\r\n    )\r\n}\r\nexport default PDFjs","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\n//view page\r\nimport HomePage from '../view/HomePage'\r\nimport Signature from '../view/Signature'\r\nimport GoldenForm from '../view/ReviewGoldenForm'\r\nimport Test from '../view/Test'\r\nimport PDFjs from '../view/PdfJs'\r\n\r\nconst AppRoute = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path='/test'><Test /></Route>\r\n                    <Route exact path='/'><HomePage /></Route>\r\n                    <Route exact path='/signature'><Signature /></Route>\r\n                    <Route exact path='/review'><GoldenForm /></Route>\r\n                    <Route exact path='/pdf'><PDFjs /></Route>\r\n                </Switch>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\nexport default AppRoute","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRoute from './router/AppRoute';\r\n//---stylesheet\r\nimport './assets/stylesheet/all.scss';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppRoute />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}